-- 문제 1.

CREATE TABLE CUSTOMER (
	ID VARCHAR(20) PRIMARY KEY COMMENT '아이디',
	NAME VARCHAR(20) NOT NULL COMMENT '이름',
	AGE INT COMMENT '나이',
	GRADE VARCHAR(20) NOT NULL COMMENT '등급',
	ADDRESS VARCHAR(255) COMMENT '주소'
);

INSERT INTO CUSTOMER VALUES
('a001', '짱구', 5, '일반고객', '서울'),
('a002', '철수', 5, 'VIP', '서울'),
('a003', '훈이', 5, '일반고객', '인천'),
('a004', '유리', 5, 'VIP', '인천'),
('a005', '맹구', 5, '일반고객', '서울');

CREATE TABLE PRODUCT (
	NO INT PRIMARY KEY COMMENT '상품번호',
	NAME VARCHAR(20) COMMENT '상품명',
	STOCK INT COMMENT '재고량',
	PRICE INT COMMENT '가격',
	COMPANY VARCHAR(20) COMMENT '제조사'
);

INSERT INTO PRODUCT VALUES
(101, '마우스', 10, 15000, '삼성'),
(102, '키보드', 10, 13000, '엘지'),
(103, '스피커', 10, 20000, '샤오미'),
(104, '모니터', 10, 50000, '벤큐');

CREATE TABLE PRODUCT_INFO (
	NO INT PRIMARY KEY COMMENT '주문번호',
	CUSTOMER_ID VARCHAR(20) COMMENT '주문자',
	ITEM_NO INT COMMENT '주문상품',
	COUNT INT COMMENT '수량',
	ORDER_DATE DATE COMMENT '주문일',
	FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID),
	FOREIGN KEY (ITEM_NO) REFERENCES PRODUCT(NO)
);

INSERT INTO PRODUCT_INFO VALUES
(1, 'a001', 101, 1, 20240101),
(2, 'a001', 103, 1, 20240301),
(3, 'a002', 102, 5, 20240101),
(4, 'a002', 103, 2, 20240201),
(5, 'a002', 104, 2, 20240201),
(6, 'a003', 102, 1, 20240201),
(7, 'a003', 104, 3, 20240301),
(8, 'a004', 101, 2, 20240301),
(9, 'a004', 102, 1, 20240301),
(10, 'a005', 101, 5, 20240201);

-- 문제 2.

SELECT CONCAT(MONTH(M.ORDER_DATE),'월') AS '월', P.NAME AS '상품명', MAX(COUNT) AS '판매수량'
FROM PRODUCT_INFO M
JOIN PRODUCT P ON M.ITEM_NO = P.NO
JOIN CUSTOMER C ON M.CUSTOMER_ID = C.ID
GROUP BY MONTH(M.ORDER_DATE), M.ITEM_NO
ORDER BY M.COUNT DESC
LIMIT 3;

SELECT C.GRADE AS '등급', C.ADDRESS AS '배송지', SUM(P.PRICE) AS '합계', COUNT(*) AS '판매건수'
FROM PRODUCT_INFO M
JOIN PRODUCT P ON M.ITEM_NO = P.`NO`
JOIN CUSTOMER C ON M.CUSTOMER_ID = C.ID
GROUP BY C.GRADE, C.ADDRESS;

-- 문제 3.

CREATE TABLE USERS (
	ID VARCHAR(20) PRIMARY KEY COMMENT '아이디',
	PASSWORD VARCHAR(255) NOT NULL COMMENT '패스워드',
	NAME VARCHAR(20) COMMENT '이름',
	EMAIL VARCHAR(100) COMMENT '이메일'
);

INSERT INTO USERS VALUES
('USER1', '1234', '둘리', 'user1@naver.com'),
('USER2', '1234', '또치', 'user2@naver.com'),
('USER3', '1234', '도우너', 'user3@gmail.com'),
('USER4', '1234', '마이콜', 'user4@gmail.com'),
('USER5', '1234', '고길동', 'user5@gmail.com');

CREATE TABLE BOARD (
	NO INT PRIMARY KEY COMMENT '글 번호',
	TITLE VARCHAR(20) NOT NULL COMMENT '제목',
	COMMENT VARCHAR(255) COMMENT '내용',
	WRITER VARCHAR(20) NOT NULL COMMENT '작성자',
	REG_DATE DATETIME COMMENT '등록일',
	UPDATE_DATE DATETIME COMMENT '수정일',
	FOREIGN KEY (WRITER) REFERENCES USERS(ID)
);

INSERT INTO BOARD VALUES
(1, '1번', '1번 게시물입니다.', 'USER1', NOW(), NOW()),
(2, '2번', '2번 게시물입니다.', 'USER1', NOW(), NOW()),
(3, '3번', '3번 게시물입니다.', 'USER2', NOW(), NOW()),
(4, '4번', '4번 게시물입니다.', 'USER3', NOW(), NOW()),
(5, '5번', '5번 게시물입니다.', 'USER3', NOW(), NOW()),
(6, '6번', '6번 게시물입니다.', 'USER4', NOW(), NOW()),
(7, '7번', '7번 게시물입니다.', 'USER4', NOW(), NOW()),
(8, '8번', '8번 게시물입니다.', 'USER4', NOW(), NOW()),
(9, '9번', '9번 게시물입니다.', 'USER4', NOW(), NOW()),
(10, '10번', '10번 게시물입니다.', 'USER5', NOW(), NOW());

CREATE TABLE COMMENT (
	NO INT PRIMARY KEY COMMENT '댓글 번호',
	CONTNET VARCHAR(255) COMMENT '내용',
	BOARD_NO INT NOT NULL COMMENT '게시물 번호',
	WRITER VARCHAR(20) NOT NULL COMMENT '작성자',
	REG_DATE DATETIME COMMENT '등록일',
	UPDATE_DATE DATETIME COMMENT '수정일',
	FOREIGN KEY (BOARD_NO) REFERENCES BOARD(NO),
	FOREIGN KEY (WRITER) REFERENCES USERS(ID)
);

INSERT INTO COMMENT VALUES
(1, '게시물 1의 댓글1', 1, 'USER1', NOW(), NOW()),
(2, '게시물 1의 댓글2', 1, 'USER4', NOW(), NOW()),
(3, '게시물 3의 댓글1', 3, 'USER1', NOW(), NOW()),
(4, '게시물 3의 댓글2', 3, 'USER2', NOW(), NOW()),
(5, '게시물 3의 댓글3', 3, 'USER4', NOW(), NOW()),
(6, '게시물 5의 댓글1', 5, 'USER2', NOW(), NOW()),
(7, '게시물 6의 댓글1', 6, 'USER4', NOW(), NOW()),
(8, '게시물 9의 댓글1', 9, 'USER1', NOW(), NOW()),
(9, '게시물 9의 댓글2', 9, 'USER2', NOW(), NOW()),
(10, '게시물 10의 댓글1', 10, 'USER1', NOW(), NOW());

-- 문제 4. *-***
UPDATE BOARD SET COMMENT = '2번 게시물이 수정되었습니다.', UPDATE_DATE = NOW() WHERE NO = 2;
UPDATE BOARD SET COMMENT = '5번 게시물이 수정되었습니다.', UPDATE_DATE = NOW() WHERE NO = 5;

SELECT B.NO, B.TITLE, U.NAME, GROUP_CONCAT(C.CONTNET) 
FROM BOARD B 
JOIN COMMENT C ON C.BOARD_NO = B.`NO`
JOIN USERS U ON U.ID = B.WRITER
GROUP BY C.BOARD_NO, U.NAME;

SELECT B.`NO`, B.TITLE, B.COMMENT, B.UPDATE_DATE, U.NAME, U.EMAIL 
FROM BOARD B 
JOIN USERS U ON B.WRITER = U.ID 
WHERE U.EMAIL LIKE '%naver%'
ORDER BY UPDATE_DATE DESC
LIMIT 1;

SELECT U.ID, U.NAME
FROM USERS U
LEFT JOIN COMMENT C ON U.ID = C.WRITER
WHERE C.WRITER IS NULL
GROUP BY U.NAME 
ORDER BY COUNT(*);

-- 문제 5.

CREATE TABLE BOOK (
	NO INT PRIMARY KEY COMMENT '도서번호',
	TITLE VARCHAR(50) NOT NULL COMMENT '제목',
	AUTHOR VARCHAR(20) COMMENT '저자',
	PUBLISHER VARCHAR(20) COMMENT '출판사',
	PUB_DATE DATE COMMENT '출간일'
);

INSERT INTO BOOK VALUES
(1, '혼자 공부하는 머신러닝', '박해선', '한빛미디어', 20200101),
(2, '비전공자를 위한 IT 지식', '최원영', '한빛미디어', 20180101),
(3, '클린 코드', '마틴', '에이콘', 20190101),
(4, '모두의 SQL', '김도연', '길벗', 20200101),
(5, '블록체인 해설서', '이병욱', '에이콘', 20220101);

CREATE TABLE MEMBERS (
	ID VARCHAR(20) PRIMARY KEY COMMENT '회원 아이디',
	FIRST_NAME VARCHAR(20) NOT NULL COMMENT '이름',
	LAST_NAME VARCHAR(20) NOT NULL COMMENT '성',
	AGE INT COMMENT '나이',
	EMAIL VARCHAR(100) COMMENT '이메일'
);

INSERT INTO MEMBERS VALUES
('M001', '애숙', '한', 43, 'm001@naver.com'),
('M002', '영복', '오', 45, 'm002@naver.com'),
('M003', '아리', '오', 17, 'm003@gmail.com'),
('M004', '동동', '오', 15, 'm004@gmail.com');

CREATE TABLE BOOK_LOAN (
	BOOK_NO INT NOT NULL COMMENT '대여한 책',
	MEMBER_NO VARCHAR(20) NOT NULL COMMENT '대여자',
	LOAN_DATE DATE COMMENT '대여일',
	DUE_DATE DATE COMMENT '대여 마지막 날',
	RETURN_DATE DATE COMMENT '반납일',
	FOREIGN KEY (BOOK_NO) REFERENCES BOOK(NO),
	FOREIGN KEY (MEMBER_NO) REFERENCES MEMBERS(ID)
);

INSERT INTO BOOK_LOAN VALUES
(1, 'M002', 20240101, 20240108, 20240107),
(1, 'M003', 20240210, 20240217, 20240220),
(1, 'M004', 20240305, 20240312, 20240310),
(2, 'M002', 20240101, 20240108, 20240105),
(3, 'M001', 20240205, 20240212, 20240218),
(3, 'M001', 20240220, 20240227, 20240222),
(5, 'M002', 20240111, 20240118, 20240115),
(5, 'M003', 20240117, 20240124, 20240125),
(5, 'M004', 20240305, 20240312, 20240311),
(5, 'M004', 20240320, 20240327, 20240320);

-- 문제 6.

SELECT B.`NO` AS '도서번호', B.TITLE AS '제목', L.DUE_DATE AS '대여 마지막 날', L.RETURN_DATE AS '반납일', CONCAT(M.LAST_NAME, M.FIRST_NAME) AS '대여자' 
FROM BOOK_LOAN L
JOIN BOOK B ON B.`NO` = L.BOOK_NO
JOIN MEMBERS M ON M.ID = L.MEMBER_NO 
WHERE L.DUE_DATE < L.RETURN_DATE;

SELECT CONCAT(MONTH(L.LOAN_DATE),'월') AS '월', B.TITLE AS '제목', COUNT(*) AS '대출 건수' 
FROM BOOK_LOAN L
JOIN BOOK B ON B.`NO` = L.BOOK_NO
JOIN MEMBERS M ON M.ID = L.MEMBER_NO
GROUP BY MONTH(L.LOAN_DATE), B.TITLE;

SELECT M.ID AS '회원 아이디', CONCAT(M.LAST_NAME, M.FIRST_NAME) AS '회원 이름', M.AGE AS '나이', COUNT(*) AS '대출 건수'
FROM BOOK_LOAN L
JOIN BOOK B ON B.`NO` = L.BOOK_NO
JOIN MEMBERS M ON M.ID = L.MEMBER_NO
WHERE M.AGE BETWEEN 10 AND 19
GROUP BY MEMBER_NO;

-- 문제 7.

SELECT C.ID, C.NAME, IFNULL(C.AGE, 10) AS 'AGE'
FROM CUSTOMER C
UNION
SELECT U.ID, U.NAME, 10 AS 'FAKE_AGE'
FROM USERS U
UNION
SELECT M.ID, CONCAT(M.LAST_NAME, M.FIRST_NAME) AS NAME, M.AGE 
FROM MEMBERS M;